<?php
namespace Supplier\Controller;

use Common\Controller\AdminbaseController;

class AdminController extends AdminbaseController
{
    protected $_model;
    protected $member_model;
    protected $userType = 21;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_model = D('BizMember');
    }
    
    public function index()
    {
        $where = array();
        //$where=array_merge($where, $this->formatRequest());
        $where['biz_status'] = 1;
        if (isset($_REQUEST['filter'])) {
            $filter = I('request.filter');
            if (isset($filter['type']) && !empty($filter['type'])) {
                $where['biz_type'] = $filter['type'];
            }
            if (isset($filter['keywords']) && !empty($filter['keywords'])) {
                $keywords = $filter['keywords'];
                $where['biz_name'] = array('like', "%$keywords%");
            }
            $this->assign('filter', $filter);
        }

        $members = $this->_model->getMembersPaged($where);
        $this->assign('members', $members);
        $this->display();
    }
    public function add()
    {
        $this->display();
    }

    public function import()
    {
        $this->display();
    }
    
    public function edit()
    {
        $id = I('get.id', 0, 'intval');
        $member=$this->_model->getMember($id);
        $this->assign($member);

        $this->assign('areas', D('Areas')->getAreasByDistrict($member['auth']['auth_district']));

        $this->display();
    }

    public function edit_post()
    {
        if (IS_POST) {
            $post = I('post.');
            if(!isset($_POST['id'])){
                $this->error('传入数据错误!');
            }
            $result = $this->_model->saveMember($post);

            $contact = $post['contact'];
            $contact['member_id'] = $post['id'];
            $result2 = D('BizContact')->saveContact($contact);

            if ($result !== false) {
                $this->success('资料已更新！');
            } else {
                $this->error($this->_model->getError());
            }
        }
    }

    public function add_post(){
        if(IS_POST){
            $post = I('post.');
            $memberData = $post['member'];
            $result = $this->_model->saveMember($memberData);
            if($result === false){
                $this->error($this->_model->getError());
            }
            $memberId = $result;
            $authData = $post['auth'];
            $authData['member_id'] = $memberId;
            $authData['auth_shop_name'] = $memberData['biz_name'];
            $authData['auth_type'] = $memberData['biz_type'];
            $authData['auth_status'] = $memberData['authenticated'];
            $authData['auth_apply_time'] = date("Y-m-d H:i:s",time());
            $authModel = D('BizAuth');
            $result = $authModel->saveAuth($authData);
            if($result === false){
                $this->error($authModel->getError());
            }

            D('Bizauth/Log')->logAction($result, sp_get_current_admin_id());
            $this->success('已添加面料商',leuu('Supplier/AdminSingle/bizinfo',array('mid'=>$memberId)));
        }
    }

    public function bizinfo($id)
    {
        $member = $this->_model->getMember($id);
        $this->assign($member);
        $this->display();
    }

    /*public function delete(){
        $id = I('get.id',0,'intval');
        exit();

        if ($this->_model->delete($id)!==false) {
            $this->success("删除成功！");
        } else {
            $this->error("删除失败！");
        }
    }*/

    public function ban(){
        if(IS_POST){
            $id = I('post.id',0,'intval');
            if (!empty($id)) {
                
                $result = $this->_model->where(array("id"=>$id))->setField('status','0');
                if ($result!==false) {
                    $this->success("禁用成功！", U("index"));
                } else {
                    $this->error('禁用失败！');
                }
            } else {
                $this->error('数据传入失败！');
            }
        }
    }

    public function cancelban(){
        if(IS_POST){
            $id = I('post.id',0,'intval');
            if (!empty($id)) {
                $result = $this->_model->where(array("id"=>$id))->setField('status','1');
                if ($result!==false) {
                    $this->success("启用成功！", U("index"));
                } else {
                    $this->error('启用失败！');
                }
            } else {
                $this->error('数据传入失败！');
            }
        }
    }

    function search(){
        $where['biz_status'] = 1;

        if(isset($_GET['term'])){
            if($_GET['method'] == 'eq'){
                $where['biz_name'] = $_GET['term'];
            }else{
                $where['biz_name'] = array('LIKE','%'.$_GET['term'].'%');
            }
        }

        //$data['query'] = $_GET['query'];
        $data = $this->_model
        ->field('id,biz_name as value')
            ->where($where)
            ->select();
        header('Content-Type:application/json; charset=utf-8');
        exit(json_encode($data));
    }

    protected function formatRequest(){
        $where = array();
        $request=I('request.');

        if(!empty($request['uid'])){
            $where['id']=intval($request['uid']);
        }

        if(!empty($request['keyword'])){
            $keyword=$request['keyword'];
            $keyword_complex=array();
            $keyword_complex['user_login']  = array('like', "%$keyword%");
            $keyword_complex['nickname']  = array('like',"%$keyword%");
            $keyword_complex['user_email']  = array('like',"%$keyword%");
            $keyword_complex['_logic'] = 'or';
            $where['_complex'] = $keyword_complex;
        }

        return $where;
    }
}
