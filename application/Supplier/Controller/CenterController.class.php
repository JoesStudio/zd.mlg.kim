<?php
/**
 * Created by PhpStorm.
 * User: Vnimy
 * Date: 2016-11-25
 * Time: 16:34
 */

namespace Supplier\Controller;


use Common\Controller\SupplierbaseController;

class CenterController extends SupplierbaseController
{
    protected $_model;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_model = D('BizMember');
    }

    function index(){
        $member = $this->_model->getMember($this->memberid);
        $this->assign('member',$member);

        $order_model = D('Order/Order');
        $where = array(
            'supplier_id'   => $this->memberid,
            'order_status'  => array('IN','0,1'),
            'order_trash'   => 0,
        );
        $order_count['all'] = $order_model->where($where)->count();
        $where['add_time'] = array('egt', time()+3600*24*7);
        $order_count['week'] = $order_model->where($where)->count();
        unset($where['add_time']);
        $where['pay_status'] = 2;
        $where['shipping_status'] = array('IN','0,3,4');
        $order_count['processing'] = $order_model->where($where)->count();
        $this->assign('order_count',$order_count);

        $tf_count = D('Tf/Tf')->where(array('vend_id'=>$this->memberid))->count();
        $this->assign('tf_count', $tf_count);

        $card_count = D('Colorcard/Colorcard')
            ->where(array('vend_id'=>$this->memberid,'card_trash'=>0))
            ->count();
        $this->assign('card_count',$card_count);


        $history = array();
        $tf_huids = D('History')
            ->getUserIds("supplier_id:".$this->memberid.";type:1;limit:20;group:user_id;");
        if(!empty($tf_huids)){
            $tf_huids = implode(',',$tf_huids);
            $history['tf'] = D('UserInfo')->getInfosNoPaged("_string:user_id IN($tf_huids);order:FIELD(user_id,$tf_huids);");
        }


        $card_huids = D('History')
            ->getUserIds("supplier_id:".$this->memberid.";type:2;limit:20;group:user_id;");
        if(!empty($card_huids)){
            $card_huids = implode(',',$card_huids);
            $history['card'] = D('UserInfo')->getInfosNoPaged("_string:user_id IN($card_huids);order:FIELD(user_id,$card_huids);");
        }
        $this->assign('history',$history);


        $collect = array();
        $tf_cuids = D('Collect/Collect')
            ->getUserIds("supplier_id:".$this->memberid.";type:1;limit:20;group:user_id;");
        if(!empty($tf_cuids)){
            $tf_cuids = implode(',',$tf_cuids);
            $collect['tf'] = D('UserInfo')->getInfosNoPaged("_string:user_id IN($tf_cuids);order:FIELD(user_id,$tf_cuids);");
        }
        $card_cuids = D('Collect/Collect')
            ->getUserIds("supplier_id:".$this->memberid.";type:3;limit:20;group:user_id;");
        if(!empty($card_cuids)){
            $card_cuids = implode(',',$card_cuids);
            $collect['card'] = D('UserInfo')->getInfosNoPaged("_string:user_id IN($card_cuids);order:FIELD(user_id,$card_cuids);");
        }
        $shop_cuids = D('Collect/Collect')
            ->getUserIds("supplier_id:".$this->memberid.";type:3;limit:20;group:user_id;");
        if(!empty($shop_cuids)){
            $shop_cuids = implode(',',$shop_cuids);
            $collect['shop'] = D('UserInfo')->getInfosNoPaged("_string:user_id IN($shop_cuids);order:FIELD(user_id,$shop_cuids);");
        }
        $this->assign('collect',$collect);

        $this->display();
    }

    function profile(){
        $this->assign('member', $this->member);
        $this->assign('areas',D('Areas')->getAreasByDistrict($this->member['contact']['contact_district']));
        $this->display();
    }

    function info_post(){
        if(IS_POST){
            $member = I('post.member');
            $contact = I('post.contact');
            $member['id'] = $this->memberid;
            $contact['member_id'] = $this->memberid;

            $result = $this->_model->saveMember($member);
            $result2 = D('BizContact')->saveContact($contact);
            if($result !== false){
                $this->refresh_session();
                $this->success('资料已更新！');
            }else{
                $this->error($this->_model->getError());
            }
        }
    }

    function basic_post(){
        if(IS_POST){
            $post = I('post.');
            $post['member']['id'] = $this->userid;
            $result = $this->_model->updateMember($post['member']);
            if($result !== false){
                $this->success('资料已更新！');
            }else{
                $this->error($this->_model->getError());
            }
        }
    }

    function authinfo(){
        $this->assign($this->member);
        $this->display();
    }

    function avatar(){
        $this->assign($this->user);
        $this->display();
    }
    
    function avatar_upload(){
        $config=array(
                'rootPath' => './'.C("UPLOADPATH"),
                'savePath' => './shop_logo/',
                'maxSize' => 512000,//500K
                'saveName'   =>    array('uniqid',''),
                'exts'       =>    array('jpg', 'png', 'jpeg'),
                'autoSub'    =>    false,
        );
        $upload = new \Think\Upload($config,'Local');//先在本地裁剪
        $info=$upload->upload();
        //开始上传
        if ($info) {
        //上传成功
        //写入附件数据库信息
            $first=array_shift($info);
            $file=$first['savename'];
            session('logo',$file);
            $this->ajaxReturn(sp_ajax_return(array("file"=>$file),"上传成功！",1),"AJAX_UPLOAD");
        } else {
            //上传失败，返回错误
            $this->ajaxReturn(sp_ajax_return(array(),$upload->getError(),0),"AJAX_UPLOAD");
        }
    }
    
    function avatar_update(){
        $session_avatar=session('logo');
        if(!empty($session_avatar)){
            $targ_w = I('post.w',0,'intval');
            $targ_h = I('post.h',0,'intval');
            $x = I('post.x',0,'intval');
            $y = I('post.y',0,'intval');
            $jpeg_quality = 90;
            
            $avatar=$session_avatar;
            $avatar_dir=C("UPLOADPATH")."shop_logo/";
            
            $avatar_path=$avatar_dir.$avatar;
            
            $image = new \Think\Image();
            $image->open($avatar_path);
            $image->crop($targ_w, $targ_h,$x,$y);
            $image->save($avatar_path);
            
            $result=true;
            
            $file_upload_type=C('FILE_UPLOAD_TYPE');
            if($file_upload_type=='Qiniu'){
                $upload = new \Think\Upload();
                $file=array('savepath'=>'','savename'=>'shop_logo/'.$avatar,'tmp_name'=>$avatar_path);
                $result=$upload->getUploader()->save($file);
            }
            if($result===true){
                $memberid=$_SESSION['user']['member']['id'];
                $result=$this->_model->where(array("id"=>$memberid))->save(array("biz_logo"=>'shop_logo/'.$avatar));
                $_SESSION['user']['member']['biz_logo'] = 'shop_logo/'.$avatar;
                /*session('user.avatar','avatar/'.$avatar);*/
                if($result){
                    $this->success("头像更新成功！");
                }else{
                    $this->error("头像更新失败！");
                }
            }else{
                $this->error("头像保存失败！");
            }
            
        }
    }
    public function do_avatar() {
        $imgurl=I('post.imgurl');
        //去'/'
        $imgurl=str_replace('/','',$imgurl);
        $old_img=$this->user['avatar'];
        $this->user['avatar']=$imgurl;
        $res=$this->users_model->where(array("id"=>$this->userid))->save($this->user);      
        if($res){
            //更新session
            session('user',$this->user);
            //删除旧头像
            sp_delete_avatar($old_img);
        }else{
            $this->user['avatar']=$old_img;
            //删除新头像
            sp_delete_avatar($imgurl);
        }
        $this->ajaxReturn($res);
    }  

    function search(){
        $where['biz_status'] = 1;

        if(isset($_GET['term'])){
            if($_GET['method'] == 'eq'){
                $where['biz_name'] = $_GET['term'];
            }else{
                $where['biz_name'] = array('LIKE','%'.$_GET['term'].'%');
            }
        }

        //$data['query'] = $_GET['query'];
        $data = $this->_model
        ->field('id,biz_name as value')
            ->where($where)
            ->select();
        header('Content-Type:application/json; charset=utf-8');
        exit(json_encode($data));
    }
}