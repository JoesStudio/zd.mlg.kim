<?php
/**
 * Created by PhpStorm.
 * User: Vnimy
 * Date: 2017-01-09
 * Time: 15:51
 */

namespace Supplier\Controller;


use Common\Controller\HomebaseController;
use Tf\Service\TfUnionService;

class IndexController extends HomebaseController
{
    protected $_model;
    protected $tf_model;
    protected $cats_model;
    protected $colorcard_model;
    protected $tfService;

    function __construct()
    {
        parent::__construct(); // TODO: Change the autogenerated stub
        $this->_model = D('BizMember');
        $this->tf_model = D('Tf/Tf');
        $this->cats_model = M("TextileFabricCats");
        $this->colorcard_model = D('Colorcard/Colorcard');
        $this->tfService = new TfUnionService();
    }

    public function index()
    {
        if (sp_is_mobile() && !IS_AJAX) {
            $this->display();
            exit();
        }
        $where = array();
        $map = array();

        $search = I('request.search/s', '');
        $page_size = I('request.ps', 16);
        if (!empty($search)) {
            $map['biz_name|biz_intro|main_core'] = array('LIKE', '%' . $search . '%');
        }
        if (!empty($where)) $map['_complex'] = $where;


        if (sp_is_user_login()) {
            $map['field'] = '*,(SELECT COUNT(coll.rec_id) FROM ' . C('DB_PREFIX')
                . 'collect_goods as coll where coll.goods_id=id AND coll.user_id='
                . sp_get_current_userid() . ' AND coll.type=3) as is_collected';
        }


        $list = $this->_model->getMembersPaged($map, $page_size);

        $card_model = D('Colorcard/Colorcard');

        foreach ($list['data'] as $supplier_id => $supplier) {
            $list['data'][$supplier_id]['cards'] = $card_model->getCardsNoPaged("supplier_id:$supplier_id;card_type:1;ispublic:1;card_status:20;limit:3;");
        }

        $this->assign('list', $list);
        if (sp_is_mobile() && IS_AJAX) {
            $html = $this->fetch('more');
            $list['html'] = $html;
            $list['status'] = 1;
            $this->ajaxReturn($list);
        } else {
            $this->display();
        }
    }

    public function single()
    {
        $supplier_id = I('get.id/d', 0);

        $page_size = I('request.ps', 20);
        $late_time = I('request.ts');

        $supplier = $this->_model->getMember($supplier_id);

        $this->assign('supplier', $supplier);

        if (sp_is_user_login()) {
            $is_collected = D('Collect/Collect')->where(array(
                'user_id' => sp_get_current_userid(),
                'goods_id' => $supplier_id,
                'type' => 3,
            ))->count() > 0 ? 1 : 0;
            $this->assign('is_collected', $is_collected);

            $uid = sp_get_current_userid();

            D('History')->addHistory($supplier_id, $uid, $supplier_id, 3);

            $fans = D('Fans')->where("user_id=$uid AND member_id=$supplier_id")->find();
            $this->assign('fans', $fans);
        } else {
            D('History')->addHistory($supplier_id, 0, $supplier_id, 3);
        }


        if (sp_is_mobile() && !IS_AJAX) {
            $materialMenu = D("TextileFabricMaterial")->order("order_index desc")->select();
            $this->assign("material_menu", $materialMenu);

            $materialMenu = D("TextileFabricView")->select();
            $this->assign("view_menu", $materialMenu);

            $weaveMenu = D("TextileFabricWeave")->select();
            $this->assign("weave_menu", $weaveMenu);

//            $materialMenu = D("TextileFabricCraft")->order("order_index desc")->select();
//            $this->assign("craft_menu", $materialMenu);
            $Wx = new \Wx\Common\Wechat();
            list($err, $qrcode) = $Wx->api->create_qrcode("shop_" . $supplier_id, 0);
            $this->assign("qrcode_ticket", $qrcode->ticket);

            list($err, $user_info) = $Wx->api->get_user_info($_SESSION['user']['openid']);
            $this->assign("subscribe", $user_info->subscribe);

            $this->display();
            exit();
        }



        $map = array();
        $map['vend_id'] = $supplier_id;
        $map['limit'] = (I("post.p", 1) - 1) * 20 . ", 20";

        $map['on_sale'] = 1;
        $map['field'] = "id,name,supplier_id,code,cat_code,name_code,tf_code,source,source_id,
        img,spec,width,weight,material,component,function,purpose,ispublic,fans_level,istop,
        on_sale,create_date,modify_date";
        if (sp_is_user_login()) {
            $collectCountSql = M('CollectGoods')
                ->field('COUNT(rec_id) as collect_count')
                ->where("goods_id=id AND supplier_id='{$supplier_id}' AND 
                user_id='" . sp_get_current_userid() . "' AND type=1 AND issource=source")
                ->buildSql();
            $map['field'] .= ",{$collectCountSql} as is_collect";

            //是要有就要列出能看的的私密面料
            if (!empty($fans)) {
                $map['_string'] = "(ispublic=0 AND fans_level<=" . $fans['level'] . ") OR ispublic=1";
                $map['order'] = "istop DESC,ispublic ASC, fans_level DESC, create_date DESC, id DESC";
            } else {
                $map['ispublic'] = 1;
                $map['order'] = "istop DESC,create_date DESC,id DESC";
            }
        } else {
            $map['ispublic'] = 1;
            $map['order'] = "istop DESC,create_date DESC,id DESC";
        }

        $_model = D('TextileFabric');
        $cats_model = M("TextileFabricCats");

        $page_size = I("request.ps",20);
        $late_time = I("request.ts");
        $catid = I("request.id");

//        $search = I('request.search/s', '');
//        if (!empty($search)) {
//            $map['name|tf_code'] = array('LIKE', '%' . $search . '%');
//            //|spec|material|component|function|purpose
//        } else {
//
//        }

        $search = I('request.search/s','');
        if(!empty($search)){
            $map['name|tf.code|tf.spec|tf.material|tf.component|tf.function|tf.purpose'] = array('LIKE','%'.$search.'%');
        } else {
            $materialtype = I("request.materialtype");  //面料类型
            if ($materialtype) {
                $map['material_id'] = array("IN", $materialtype);
            }

            $submaterialtype = I("request.submaterialtype");  //面料类型
            if ($materialtype) {
                $map['sub_material_id'] = array("IN", $submaterialtype);
            }

            $viewType = I("request.viewtype");  //面料类型
            if ($viewType) {
                $map['view_id'] = array("IN", $viewType);
            }

            $craftType = I("request.crafttype");  //面料类型
            if ($craftType) {
                $map['craft_id'] = array("IN", $craftType);
            }

            $weaveType = I("request.weavetype");  //面料类型
            if ($weaveType) {
                $map['weave_id'] = array("IN", $weaveType);
            }

            $yarnAndVisualType = I("request.yarn_and_visual");  //纱线类型
            if ($yarnAndVisualType) {
                $map2 = [];
//            $map2['_logic'] = 'or';
                foreach($yarnAndVisualType as $value) {
//                $tmpMap["yarn_id"] = $value[0];
//                $tmpMap['visual_id'] = $value[1];
//                $tmpMap['_logic'] = 'and';
                    $map2[] = $value[1];
//                $map2[] = $tmpMap;
                }

//            $map2Str = implode(", ", $map2);
//            $map2Str = "(" . $map2Str . ")";

                $map['visual_id'] = array("IN", $map2) ;
            }


//        var_dump($map2);


            $where = array();
            if(!empty($catid)){
//                修改
                $catids = D('Tf/Cat')->getAllSubIds(0);
                array_push($catids, $catid);
                if(!empty($catids)){
                    $where['cid'] = array('IN',$catids);
                }
            }

            $data=$cats_model->where($where)->find();
            $this -> assign("title",$data["title"]);


//            $limit = I("request.p") ? I("request.p") - 1 . ", 20" : 0 . ", 20";

//            $map['limit'] = $limit;

            $orderBy = I("request.orderby");
            if ($orderBy == 1) {
                $map['order'] = "tf.price ASC";
            } else if ($orderBy == 2) {
                $map['order'] = "tf.price desc";
            } else if ($orderBy == 3) {
                $map['order'] = "tf.created_at ASC";
            } else if ($orderBy == 4) {
                $map['order'] = "tf.created_at desc";
            }

            if(!empty($where)) $map['_complex'] = $where;

            //最近上新
            if(isset($late_time) && !empty($late_time)){
                $after_time = time()-$late_time;
                $map['UNIX_TIMESTAMP(tf.created_at)'] = array('egt',$after_time);
            }
        }

        $map['field'] = 'tf.*,CONCAT(tf.vend_id,tf.cat_code,tf.name_code,tf.code) as tf_code
        ,IFNULL(shelves.on_sale,0) as on_sale';
        $map['field'] .= ',(SELECT COUNT(rec_id) FROM '.C('DB_PREFIX')
            .'collect_goods where goods_id=tf.id AND user_id='.sp_get_current_userid().
            ' AND type=1) as is_collected';

        $list = $_model->getTfPaged($map,$page_size);
        $this->assign("list", $list);

        if (sp_is_mobile() && IS_AJAX) {
            $html = $this->fetch('more-single');
            $list['html'] = $html;
            $list['status'] = 1;
            $this->ajaxReturn($list);
        } else {
            $this->display();
        }
    }

    private function getSelectedCids($id){
        $ids = array($id,);
        $pid =  M('TextileFabricCats')->where("id='{$id}'")->getField('pid');
        if(!empty($pid)){
            $ids = array_merge($this->getSelectedCids($pid), $ids);
        }
        return $ids;
    }

    function get_subIds($id)
    {
        $ids = array();
        $where['pid'] = $id;
        $catModel = M('TextileFabricCats');
        $list = $catModel->where($where)->getField('id', true);
        if (!empty($list)) {
            $ids = array_merge($ids, $list);
            foreach ($list as $subId) {
                $ids = array_merge($ids, $this->get_subIds(intval($subId)));
            }
        }
        return $ids;
    }

    public function colorcard()
    {
        $where = array();
        $supplier_id = I('get.id/d', 0);
        $page_size = I('request.ps', 16);
        $search = I('request.search/s', '');

        $supplier = $this->_model->getMember($supplier_id);
        $this->assign('supplier', $supplier);

        if (!empty($search)) {
            $where['card_name'] = array('LIKE', '%' . $search . '%');
        }

        if (sp_is_mobile()) {
            $where['card_type'] = 2;
        } else {
            $where['card_type'] = 1;
        }
        $where['card_status'] = 20;
        $where['supplier_id'] = $supplier_id;

        if (sp_is_user_login()) {

            $is_collected = D('Collect/Collect')->where(array(
                'user_id' => sp_get_current_userid(),
                'goods_id' => $supplier_id,
                'type' => 3,
            ))->count() > 0 ? 1 : 0;
            $this->assign('is_collected', $is_collected);

            $where['field'] .= 'c.*,biz.biz_name,(SELECT COUNT(rec_id) FROM ' . C('DB_PREFIX')
                . 'collect_goods coll where coll.goods_id=c.card_id AND user_id=' . sp_get_current_userid() .
                ' AND type=2) as is_collected';
            $uid = sp_get_current_userid();

            $fans = D('Fans')->where("user_id=$uid AND member_id=$supplier_id")->find();
            $this->assign('fans', $fans);

            //是要有就要列出能看的的私密色卡
            if (!empty($fans)) {
                $where['_string'] = "(ispublic=0 AND fans_level<=" . $fans['level'] . ") OR ispublic=1";
                $where['order'] = "ispublic ASC, fans_level DESC, create_date DESC, id DESC";
            } else {
                $where['ispublic'] = 1;
            }

            D('History')->addHistory($supplier_id, $uid, $supplier_id, 3);

        } else {
            $where['ispublic'] = 1;
        }

        $list = $this->colorcard_model->getCardsPaged($where, $page_size);

        $this->assign('list', $list);
        if (sp_is_mobile() && IS_AJAX) {
            $html = $this->fetch('more-colorcard');
            $list['html'] = $html;
            $this->ajaxReturn($list);
        } else {
            $this->display();
        }


    }


    public function get_analytics() {
        $type = I("post.type", 1);

        $supplyId = $_SESSION['user']['member']['id'];
        if ($type == 1) {
            //店铺7天访问数
            $data = D("History")->getShopVisitHistory($supplyId, 7, date("Y-m-d"));

            $this->ajaxReturn(array(
                "data" => $data
            ));
        } else if ($type == 2) {
            //店铺7天访客数
            $data = D("History")->getShopUserVisitHistory($supplyId, 7, date("Y-m-d"));

            $this->ajaxReturn(array(
                "data" => $data
            ));
        } else if ($type == 3) {

            $data = D("History")->getColorboardHistory($supplyId, 7, date("Y-m-d"));
            $this->ajaxReturn(array(
                "data" => $data
            ));
        } else if ($type == 4) {

            $data = D("History")->getGoodsHistory($supplyId, 7, date("Y-m-d"));
            $this->ajaxReturn(array(
                "data" => $data
            ));
        } else if ($type == 5) {

            $data = D("History")->getShopUserVisitHistory($supplyId, 7, date("Y-m-d"));
            $this->ajaxReturn(array(
                "data" => $data
            ));
        } else if ($type == 6) {

            $data = D("History")->getShopUserVisitHistory($supplyId, 7, date("Y-m-d"));
            $this->ajaxReturn(array(
                "data" => $data
            ));
        }
    }


}
