<?php
namespace Customer\Controller;

use Common\Controller\AdminbaseController;

class AdminController extends AdminbaseController{

    protected $_model;
    protected $userType = 22;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_model = D('BizMember');
    }

    public function index(){
        $where = array();
        $where=array_merge($where,$this->formatRequest());
        $where['user_type'] = $this->userType;
        $members = $this->_model->getMembersPaged($where);
        $this->assign('members', $members);
        $this->display();
    }

    public function add(){
        $this->display();
    }

    public function edit(){
        $id = I('get.id',0,'intval');

        $member=$this->_model->getCust($id);
        $this->assign($member);

        $this->assign('areas',D('Areas')->getAreasByDistrict($member['contact']['contact_area']));

        $this->display();
    }
    
    public function add_post(){
        if(IS_POST){
            $post = I('post.');
            unset($post['contact']['contact_province']);
            unset($post['contact']['contact_city']);
            unset($post['searchUserLogin']);
            $result = $this->_model->addCust($post);
            if($result){
                $this->success('添加成功！');
            }else{
                $this->error($result == -1 ? $this->_model->getError():$this->_model->getDbError());
            }
        }
    }

    public function edit_post(){
        if(IS_POST){
            $post = I('post.');
            unset($post['contact']['contact_province']);
            unset($post['contact']['contact_city']);
            $result = $this->_model->updateMember($post);
            if($result){
                $this->success('资料已更新！');
            }else{
                $this->error($result == -1 ? $this->_model->getError():$this->_model->getDbError());
            }
        }
    }

	public function delete(){
	    $id = I('get.id',0,'intval');

		if ($this->_model->delete($id)!==false) {
			$this->success("删除成功！");
		} else {
			$this->error("删除失败！");
		}
	}

    public function ban(){
        $id = I('get.id',0,'intval');
    	if (!empty($id)) {
            $_model=D("BizMember");
            
    		$result = $_model->where(array("id"=>$id))->setField('status','0');
    		if ($result!==false) {
    			$this->success("禁用成功！", U('index'));
    		} else {
    			$this->error('禁用失败！');
    		}
    	} else {
    		$this->error('数据传入失败！');
    	}
    }

    public function cancelban(){
    	$id = I('get.id',0,'intval');
    	if (!empty($id)) {
    		$result = $this->_model->where(array("id"=>$id))->setField('status','1');
    		if ($result!==false) {
    			$this->success("启用成功！", U('index'));
    		} else {
    			$this->error('启用失败！');
    		}
    	} else {
    		$this->error('数据传入失败！');
    	}
    }

    function search_unsettled(){
        if($_GET['term']){
            $where['user_type'] = 20;
            $where['user_login'] = array('LIKE','%'.$_GET['term'].'%');

            //$data['query'] = $_GET['query'];
            $data = D('Users')
                ->field('id,user_login as value')
                ->where($where)
                ->select();
            header('Content-Type:application/json; charset=utf-8');
            exit(json_encode($data));
        }
    }

    function search(){
        if($_GET['term']){
            $where['members.status'] = 1;
            if(isset($_GET['type'])){
                $where['users.user_type'] = $_GET['type'];
            }

            $where['users.user_type'] = isset($_GET['type']) ? $_GET['type']:array('between', '20,29');

            if($_GET['method'] == 'eq'){
                $where['members.long_name'] = $_GET['term'];
            }else{
                $where['members.long_name'] = array('LIKE','%'.$_GET['term'].'%');
            }

            //$data['query'] = $_GET['query'];
            $data = $this->_model
                ->alias('members')
                ->field('members.id,members.long_name as value')
                ->join('__USERS__ users ON users.id = members.id')
                ->where($where)
                ->select();
            header('Content-Type:application/json; charset=utf-8');
            exit(json_encode($data));
        }
    }

    function formatRequest(){
        $where = array();
        $request=I('request.');

        if(!empty($request['uid'])){
            $where['id']=intval($request['uid']);
        }

        if(!empty($request['keyword'])){
            $keyword=$request['keyword'];
            $keyword_complex=array();
            $keyword_complex['user_login']  = array('like', "%$keyword%");
            $keyword_complex['nickname']  = array('like',"%$keyword%");
            $keyword_complex['user_email']  = array('like',"%$keyword%");
            $keyword_complex['_logic'] = 'or';
            $where['_complex'] = $keyword_complex;
        }

        return $where;
    }


}