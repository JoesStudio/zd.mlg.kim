<?php
namespace User\Controller;

use Common\Controller\AdminbaseController;
use Common\Model\UsersModel;
use Common\Model\UserInfoModel;

class IndexadminController extends AdminbaseController
{

    protected $users_model;
    protected $infoModel;
    public function __construct()
    {
        parent::__construct(); // TODO: Change the autogenerated stub
        $this->users_model = new UsersModel();
        $this->infoModel = new UserInfoModel();
    }

    public function index()
    {
        $tag['biz_status'] =1;
        $tag['authenticated'] =1;

        $memberList = D('BizMember')->getMembersNoPaged($tag);
        
        $this->assign("memberList",$memberList);

        $where = array();
        $where=array_merge($where, $this->formatRequest());
        $where['user_type'] = array('BETWEEN','20,29');
        if (isset($_GET['status'])) {
            $where['user_status'] = I('get.status/d');
        }
        $users = $this->users_model->getUsersPaged($where);
        $ids = array_keys($users['data']);
        if (!empty($ids)) {
            $infos = D('UserInfo')->getInfosNoPaged(array('user_id' => array('IN', $ids)));
            foreach ($users['data'] as $id => $user) {
                $users['data'][$id]['userinfo'] = $infos[$id];
            }
        }

        $this->assign("users", $users);
        $this->display();
    }

    public function send_sms($id)
    {
        $user = $this->users_model->getUser($id);
        $this->assign($user);
        $this->display();
    }

    function add(){
        $this->display();
    }

    function add_post(){
        $post = I('post.');
        $post['nickname'] = $post['user_login'];
        $this->users_model->startTrans();
        $result = $this->users_model->saveUser($post);
        if($result !== false){
            $result = $this->infoModel->saveInfo(array(
                'user_id'=>$result,
                'nickname'=>$post['user_login']
            ));
        }
        if($result){
            $this->users_model->commit();
            $this->success('添加成功！',U('index'));
        }else{
            $this->users_model->rollback();
            $this->error($this->users_model->getError());
        }
    }

    function formatRequest(){
        $where = array();
        $request=I('request.');

        if(!empty($request['uid'])){
            $where['id']=intval($request['uid']);
        }

        if(!empty($request['supplier_id'])){
            $memberid = $request['supplier_id'];
            $fansList = D('Supplier/Fans')->getFansNoPaged("member_id:".$memberid.";");
            $userids = array();

            foreach($fansList as $key =>$value){
                $userids[] = $value['user_id'];
            }
            if(!empty($userids)){
                $where['id'] = array('in',$userids);
            }

            $this->assign("memberid",$memberid);

            
   
        }

        if(!empty($request['keyword'])){
            $keyword=$request['keyword'];
            $keyword_complex=array();
            $keyword_complex['user_login']  = array('like', "%$keyword%");
            $keyword_complex['nickname']  = array('like',"%$keyword%");
            $keyword_complex['user_email']  = array('like',"%$keyword%");
            $keyword_complex['_logic'] = 'or';
            $where['_complex'] = $keyword_complex;
        }

        return $where;
    }
    
    public function ban()
    {
        if (IS_POST) {
            $id= I('post.id', 0, 'intval');
            if ($id) {
                $result = M("Users")
                ->where(array("id"=>$id,"user_type"=>array('BETWEEN','20,29')))
                ->setField('user_status', 0);
                if ($result) {
                    $this->success("会员拉黑成功！", U("index"));
                } else {
                    $this->error('会员拉黑失败,会员不存在,或者是管理员！');
                }
            } else {
                $this->error('数据传入失败！');
            }
        }
    }
    
    public function cancelban()
    {
        if (IS_POST) {
            $id= I('post.id', 0, 'intval');
            if ($id) {
                $result = M("Users")
                ->where(array("id"=>$id,"user_type"=>array('BETWEEN','20,29')))
                ->setField('user_status', 1);
                if ($result) {
                    $this->success("会员启用成功！", U("index"));
                } else {
                    $this->error('会员启用失败！');
                }
            } else {
                $this->error('数据传入失败！');
            }
        }
    }

    public function delete()
    {
        if (IS_POST) {
            $id= I('post.id', 0, 'intval');
            if ($id) {
                $result = $this->users_model->deleteUser($id);
                if ($result) {
                    $this->success("会员已删除！", U("index"));
                } else {
                    $this->error('会员删除失败！');
                }
            } else {
                $this->error('数据传入失败！');
            }
        }
    }
}
