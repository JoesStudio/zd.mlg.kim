<?php
/**
 * Created by PhpStorm.
 * User: Vnimy
 * Date: 2016-12-10
 * Time: 17:31
 */

namespace Order\Controller;


use Common\Controller\AdminbaseController;

class AdminDeliveryController extends AdminbaseController
{
    protected $_model;
    protected $orders_model;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_model = D('Order/Delivery');
        $this->orders_model = D('Order/Order', 'Logic');
        $this->assign('statuses', $this->_model->statuses);
        $this->assign('order_statuses', $this->orders_model->orderStatuses);
        $this->assign('pay_statuses', $this->orders_model->payStatuses);
        $this->assign('shipping_statuses', $this->orders_model->shippingStatuses);
    }

    function index(){
        $tag = array();
        if (isset($_GET['status'])) {
            $tag['status'] = I('get.status/d');
        }

        if (isset($_REQUEST['filter'])) {

            $filter = I('request.filter');

            if (isset($filter['type'])){
                if($filter['type']==-1){
                    $tag['status'] = array('IN','0,1');
                }else{
                $tag['status'] = $filter['type'];
                }
            }

            if (isset($filter['order_sn']) && !empty($filter['order_sn'])) {
                $tag['delivery.order_sn'] = $filter['order_sn'];
            }

            $this->assign('filter', $filter);
            
        }


        $deliveries = $this->_model->getDeliveriesPaged($tag);
        $this->assign('deliveries', $deliveries);
        $this->display();
    }

    function groupadd(){
        $group_id = I('get.group_id');
        $action_note = I('get.action_note');
        $group = D('Order/Group')->getGroup($group_id);
        if (empty($group)) {
            $this->error(L('ERROR_REQUEST_DATA'));
        }

        if ($group['actions']['ship'] == 0) {
            $this->error('当前操作不被允许！');
        }

        foreach($group['orders'] as $key => $order) {
            $group['orders'][$key]['delivery'] = $this->_model->where("order_id=".$order['order_id'])->find();
        }
        $this->assign($group);
        $this->assign('member', $this->member);
        $this->assign('group_id',$group_id);
        $this->assign('action_note',$action_note);
        $this->display();
    }

    public function groupadd_post()
    {
        if (IS_POST) {
            $post = I('post.');
            $group_id = $post['group_id'];
            $order_ids = $post['order_id'];
            $action_note = $post['action_note'];
            $error = array();
            foreach ($order_ids as $order_id) {
                $data = $this->_model->build_delivery_data($order_id,'',sp_get_current_userid());
                if(!empty($data)){
                    $result = $this->_model->buildDelivery($data);
                    if($result !== false){
                        $this->orders_model->readyForShipment($order_id);
                        $this->logAction($order_id, $action_note);
                    }else{
                        $error[$order_id] = $this->_model->getError();
                    }
                }
            }
            D('Order/GroupLog')->logAction($group_id, sp_get_current_userid(), 'SHIP', $action_note);
            if (empty($error)) {
                $this->success('', leuu('Order/AdminGroup/group', array('id'=>$group_id)));
            } else {
                $this->error(reset($error));
            }
        }
    }

    function group($group_id){
        $group = D('Order/Group')->getGroup($group_id);
        if (empty($group)) {
            $this->error(L('NO_DATA_ERROR'));
        }
        $this->assign('group_id', $group_id);
        $order_ids = array();
        foreach ($group['orders'] as $order) {
            $order_ids[] = $order['order_id'];
        }
        $where['delivery.order_id'] = array('IN', $order_ids);
        $deliveries = $this->_model->getDeliveriesNoPaged($where);
        $this->assign('deliveries', $deliveries);
        $this->display();
    }

    function add(){
        $order_id = I('get.order_id');
        $is_colorcard = I('get.is_colorcard');
        $action_note = I('get.action_note');
        $where1['order_id'] = $order_id;
        $where1['shipping_status'] = array('IN','0,3');
        $count1 = $this->orders_model->where($where1)->count();
        $where2['order_id'] = $order_id;
        $count2 = $this->_model->where($where2)->count();
        if($count1 > 0 && $count2 == 0){
            $order = $this->orders_model->getOrder($order_id);
            $member = D('BizMember')->getMember($order['user_id']);
  
            $this->assign($order);
            $this->assign('member', $member);
            $this->assign('order_id',$order_id);
            $this->assign('is_colorcard',$is_colorcard);
            $this->assign('action_note',$action_note);
            $this->display('add');
        }elseif($count1 == 0){
            $orderType = $this->orders_model->where("order_id=$order_id")->getField('order_type');
            if($orderType == 4){
                $this->redirect('AdminCard/view',array('id'=>$order_id));
            }else{
                $this->redirect('Admin/view',array('id'=>$order_id));
            }
        }elseif($count2 > 0){
            $this->redirect('view',array('order_id'=>$order_id));
        }
    }

    function add_post(){
        if(IS_POST){
            $post = I('post.');
            $order_id = $post['order_id'];
            $action_note = $post['action_note'];
            $data = $this->_model->build_delivery_data($order_id,'',sp_get_current_admin_id());
            if(!empty($data)){
                $result = $this->_model->buildDelivery($data);
                if($result !== false){
                    $this->orders_model->readyForShipment($order_id);
                    $this->logAction($order_id, $action_note);
                    $orderType = $this->orders_model->where("order_id=$order_id")->getField('order_type');
                    if($orderType == 4){
                        $this->success('已生成发货单！',U('Admin/view',array('id'=>$order_id)));
                    }else{
                        $this->success('已生成发货单！',U('AdminCard/view',array('id'=>$order_id)));
                    }
                }else{
                    $this->error($this->_model->getError());
                }
            }else{
                $this->error('订单数据错误！');
            }
        }
    }

    function view(){
        if(isset($_GET['id'])){
            $data = $this->_model->getDelivery(I('get.id'));
        }else if(isset($_GET['order_id'])){
            $data = $this->_model->getDeliveryByOrder(I('get.order_id'));
        }else{
            $this->redirect('index');
        }
        $this->assign($data);
        $this->assign('action_note',I('get.action_note'));
       

        $order_id = $data['order_id'];
        $logs = D('Log')->getLogsPaged("order_id:$order_id;action_place:1;");
        $this->assign('logs', $logs);

        $order_type = D('Order/Order')
            ->where("order_id=$order_id")
            ->getField('order_type');
        $this->assign('order_type', $order_type);
        if ($order_type == 2) {
            $group_id = M('OrderGroupRls')
                ->where("order_id=$order_id")
                ->getField('group_id');
            $this->assign('group_id', $group_id);
        }

        $this->display();
    }

    function delete(){
        if(IS_POST){
            $id = I('post.id');
            $delivery = $this->_model->getDelivery($id);
            $order_id = $delivery['order_id'];
            $result = $this->_model->deleteDelivery($id);
            if($result !== false){
                $order_model = D('Order');
                $result = $order_model->unship($order_id);
                if($result === false){
                    $this->_model->setError($order_model->getError());
                }
            }

            if($result !== false){
                $this->logAction($order_id, L('LOG_DELETE',array('sn'=>$delivery['delivery_sn'])));

                $order_type = D('Order/Order')
                    ->where("order_id=$order_id")
                    ->getField('order_type');
                if ($order_type == 2) {
                    $group_id = M('OrderGroupRls')
                        ->where("order_id=$order_id")
                        ->getField('group_id');
                    $href = U('group', array('group_id'=>$group_id));
                } else {
                    $href = U('index');
                }

                $this->success('删除成功！',$href);
            }else{
                $this->error('删除失败！'.$this->_model);
            }
        }
    }

    function operate(){
        if(IS_POST && $_POST['act'] == 'delivery_ship'){
            $post = I('post.');
            if(empty($post['delivery_id'])){
                $this->error('非法操作！');
            }

            $order_id = $post['order_id'];
            $delivery_id = $post['delivery_id'];

            if(isset($post['delivery_confirmed']) && $post['delivery_confirmed'] == '发货'){
                $_POST['operation'] = 'delivery_confirmed';
                $this->operate_post();
            }
            if(isset($post['delivery_cancel_ship']) && $post['delivery_cancel_ship'] == '取消发货'){
                if(empty($post['action_note'])){
                    $this->error('请填写取消发货原因！');
                }
                $_POST['operation'] = 'delivery_cancel_ship';
                $this->operate_post();
            }
        }
    }

    function operate_post(){
        if(IS_POST){
            $post = I('post.');

            $order_id = $post['order_id'];
            $delivery_id = $post['delivery_id'];

            switch($post['operation']){
                case 'delivery_confirmed':
                    $invoice_no = $post['invoice_no'];
                    $result = $this->_model->toDelivery($delivery_id,$invoice_no);
                    $this->send_delivery_msg($order_id);
                    break;
                case 'delivery_cancel_ship':
                    $result = $this->_model->unship($delivery_id);
                    if($result !== false){
                        $order_model = D('Order');
                        $result = $order_model->unship($order_id);
                        if($result === false){
                            $this->_model->setError($order_model->getError());
                        }
                    }
                    break;
                default:
                    $result = false;
            }

            if($result !== false){
                $order_id = $post['order_id'];
                $action_note = $post['action_note'];
                $this->logAction($order_id, $action_note);

                $order_type = D('Order/Order')
                    ->where("order_id=$order_id")
                    ->getField('order_type');
                if ($order_type == 2) {
                    $group_id = M('OrderGroupRls')
                        ->where("order_id=$order_id")
                        ->getField('group_id');
                    $href = U('group', array('group_id'=>$group_id));
                } else {
                    if($order_type == 4){
                        $href = U('AdminCard/view', array('id'=>$order_id));
                    }else{
                        $href = U('Admin/view', array('id'=>$order_id));
                    }
                }
                $this->success('操作成功！',$href);
            }else{
                $this->error('操作失败'.$this->_model->getError());
            }
        }
    }

    function logAction($order_id, $action_note){
        D('Log')->logAction($order_id, sp_get_current_admin_id(), $action_note, 1);
    }

    function send_delivery_msg($order_id){
        $order = D('Order')->getOrder($order_id);
        if($order){
            $title = L('MSG_TITLE_DELIVERY',array('order_sn'=>$order['order_sn']));
            $content = L('MSG_CONTENT_DELIVERY',array('order_sn'=>$order['order_sn'],'invoice_no'=>$order['invoice_no']));
            if($order['is_colorcard']==1){
                $receiver_type = 2;
            }else{
                $receiver_type = 1;
            }
            D('Notify/Msg')->sendMsg($order['user_id'],$title,$content,0,0,2);
        }
    }

}