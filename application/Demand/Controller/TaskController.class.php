<?php
/**
 * Created by PhpStorm.
 * User: Vnimy
 * Date: 2017-01-19
 * Time: 11:16
 */

namespace Demand\Controller;


use Common\Controller\SupplierbaseController;

class TaskController extends SupplierbaseController
{
    protected $_model;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_model = D('Demand/Task');
    }

    function index(){
        $where = array();
        if(isset($_REQUEST['status'])){
            $_REQUEST['filter']['status'] = $_REQUEST['status'];
        }

        if(isset($_REQUEST['filter'])){
            $filter = I('request.filter');
            $statuses = array_keys(D('Demand/Task')->statuses);
            if(isset($filter['status'])){
                if($filter['status']==-1){
                    $where['task_status'] = array('IN',$statuses);
                }else{
                    $where['task_status'] = $filter['status'];
                }
            }
            if(!empty($filter['keywords'])){
                $where['demand_component'] = array('LIKE','%'.$filter['keywords'].'%');
            }
            if(!empty($filter['datestart']) && !empty($filter['datestart'])){
                $where['task_created'] = array('between', strtotime($filter['datestart']) . ',' . strtotime($filter['datefinish']));
            }elseif(!empty($filter['datestart']) && empty($filter['datestart'])){
                $where['task_created'] = array('egt', strtotime($filter['datestart']));
            }elseif(empty($filter['datestart']) && !empty($filter['datestart'])){
                $where['task_created'] = array('elt', strtotime($filter['datefinish']));
            }
            $this->assign('filter',$filter);
        }

        $where['supplier_id'] = $this->user['member']['id'];
        $where['subData'] = array('user',);

        $list = $this->_model->getTasksPaged($where);
        $this->assign('list',$list);
        $this->display();
    }

    function view($id){
        $data = $this->_model->getTask($id);
        $this->assign($data);
        $this->display();
    }

    function cancel(){
        if(IS_POST){
            $id = I('post.id');

            $where = array(
                'task_id'       => $id,
                'supplier_id'   => $this->user['member']['id'],
                'task_status'   => 0,
            );
            $result = $this->_model->where($where)->delete();
            if($result !== false){
                $this->success('任务已取消',leuu('index'));
            }else{
                $this->error('取消失败！');
            }
        }
    }

    function operate(){
        if(IS_POST){
            $post = I('post.');
            if(empty($post['task_id'])){
                $this->error('非法操作！');
            }
            $where = array(
                'task_id'   => $post['task_id'],
                'supplier_id'=> $this->user['member']['id'],
            );
            $task = $this->_model->getTask($where);
            if(empty($task)){
                $this->error('非法操作！');
            }else{
                if($task['task_status'] > 0) {
                    $this->error('这个需求已经处理过了！');
                }
                if($task['task_expired'] > 0 && $task['task_expired'] < time()){
                    $this->error('这个需求已经过期了！');
                }
                switch($post['act']){
                    case 'comment':
                        $this->comment();
                }
            }
        }
    }

    function comment(){
        if(IS_POST){
            $post = I('post.');
            if(empty($post['task_comment'])){
                $this->error('请输入您的意见！');
            }
            $task_id = $post['task_id'];
            $comment = $post['task_comment'];
            $data = array(
                'task_id'           => $task_id,
                'task_status'       => 1,
                'task_processed'    => time(),
                'task_comment'      => $comment,
            );
            $result = $this->_model->saveTask($data);
            $task = $this->_model->getTask($task_id);
            if($result !== false){
                $title = '供应商已经对您的需求给出意见了！';
                D('Notify/Msg')->sendMsg($task['user_id'],$title,$comment);
                $this->check_process($task['demand_id'],$task['user_id']);
                $this->success('',leuu('view',array('id'=>$task_id)));
            }else{
                $this->error('操作失败！'.$this->_model->getError());
            }
        }
    }

    function check_process($demand_id,$user_id){
        $demand_model = D('Demand/Demand');
        //$demand = $demand_model->where("demand_id=$demand_id")->find();
        $count = $this->_model->where("demand_id=$demand_id AND task_status=0")->count();

        if(empty($count)){
            $data = array(
                'demand_id'     => $demand_id,
                'demand_status' => 3,
            );
            $result = $demand_model->saveDemand($data);
            if($result !== false){
                $title = '您可以采纳需求方案了！';
                $content = '所有供应商已经给出方案了，您需要采纳其中一个方案。';
                D('Notify/Msg')->sendMsg($user_id,$title,$content);
            }else{
                $this->error($demand_model->getError());
            }
        }
    }

}